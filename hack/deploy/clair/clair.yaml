apiVersion: v1
kind: Secret
metadata:
  name: clair-notifier-cert
  namespace: ${SCANNER_NAMESPACE}
  labels:
    app: clair
data:
  ca.crt: ${SERVICE_SERVING_CERT_CA}
  client.crt: ${CLAIR_NOTIFIER_CLIENT_CERT}
  client.key: ${CLAIR_NOTIFIER_CLIENT_KEY}
---
apiVersion: v1
kind: Secret
metadata:
  name: clair-serving-cert
  namespace: ${SCANNER_NAMESPACE}
  labels:
    app: clair
data:
  ca.crt: ${CLAIR_API_SERVING_CERT_CA}
  server.crt: ${CLAIR_API_SERVER_CERT}
  server.key: ${CLAIR_API_SERVER_KEY}
---
apiVersion: v1
kind: Service
metadata:
  name: clairsvc
  namespace: ${SCANNER_NAMESPACE}
  labels:
    app: clair
spec:
  type: NodePort
  ports:
  - port: 6060
    protocol: TCP
    nodePort: 30060
    name: clair-port0
  - port: 6061
    protocol: TCP
    nodePort: 30061
    name: clair-port1
  selector:
    app: clair
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clair
  namespace: ${SCANNER_NAMESPACE}
  labels:
    app: clair
spec:
  replicas: 1
  selector:
    matchLabels:
      app: clair
  template:
    metadata:
      labels:
        app: clair
    spec:
      containers:
      - name: clair
        image: quay.io/coreos/clair-git:latest
        args:
          - "-config"
          - "/config/config.yaml"
        ports:
        - containerPort: 6060
        - containerPort: 6061
        volumeMounts:
        - mountPath: /config
          name: clair-config
        - mountPath: /var/run/secrets/clair
          name: clair-serving-cert
          readOnly: true
        - mountPath: /var/run/secrets/scanner
          name: clair-notifier-cert
          readOnly: true
      volumes:
      - name: clair-config
        configMap:
          name: clair-config
      - name: clair-notifier-cert
        secret:
          # defaultMode: 420
          secretName: clair-notifier-cert
      - name: clair-serving-cert
        secret:
          # defaultMode: 420
          secretName: clair-serving-cert
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: clair-postgres
  namespace: ${SCANNER_NAMESPACE}
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - image: postgres:latest
        name: postgres
        env:
        - name: POSTGRES_PASSWORD
          value: password
        ports:
        - containerPort: 5432
          name: postgres-port
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: ${SCANNER_NAMESPACE}
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
